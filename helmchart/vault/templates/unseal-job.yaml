apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "vault.fullname" . }}-unseal-{{ .Release.Revision }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "vault.fullname" . }}-unseal
    spec:
      restartPolicy: OnFailure
      containers:
      - name: vault-unseal
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        env:
        - name: VAULT_ADDR
          value: "http://{{ include "vault.fullname" . }}:{{ .Values.service.port }}"
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until nc -z {{ include "vault.fullname" . }} {{ .Values.service.port }}; do
            echo "Waiting for Vault service to be ready..."
            sleep 5
          done
          
          # Get unseal key from secret
          UNSEAL_KEY=$(kubectl get secret {{ include "vault.fullname" . }}-keys -o jsonpath='{.data.unseal-key}' | base64 -d)
          
          # Check if Vault needs unsealing
          if vault status | grep -q "Sealed.*true"; then
            echo "Unsealing Vault..."
            vault operator unseal $UNSEAL_KEY
            echo "Vault unsealed successfully"
          else
            echo "Vault is already unsealed"
          fi
      serviceAccountName: {{ include "vault.fullname" . }}-init

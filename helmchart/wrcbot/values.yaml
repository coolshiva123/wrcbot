# Default values for wrcbot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: wrcbot
  pullPolicy: IfNotPresent  # Won't pull if image exists locally
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Bot configuration
bot:
  # Override container command and args (useful for debugging)
  overrideCommand: ["/bin/sh"]
  overrideArgs: ["-c", "while true; do echo 'Pod is running...'; sleep 30; done"]
  
  # Disable health checks (useful when app is not ready)
  disableHealthChecks: true
  
  # Environment variables for the bot
  env:
    # Add your bot environment variables here
    # For example:
    # BOT_TOKEN: "your-bot-token"
    # ADMIN_USERS: "@user1,@user2"
    BOT_DEBUG: "true"
  config:
    config.py: |
      # Configuration for the WRC Bot 
      # This file is generated by the Helm chart and should not be modified directly.
      # It will be mounted as a ConfigMap in the container.
      # Ensure that sensitive information is stored in a secure way, such as using Vault or Kubernetes
      # secrets.
      BACKEND='SlackV3'
      BOT_DATA_DIR = '/errbot/data'
      BOT_EXTRA_PLUGIN_DIR = '/errbot/src/plugins'
      BOT_LOG_FILE = '/errbot/errbot.log'
      BOT_EXTRA_BACKEND_DIR = '/opt/errbot/backend'
      BOT_LOG_LEVEL = 'DEBUG'
      BOT_ADMINS = ()  # Will come from Vault
      BOT_IDENTITY = {
          'token': '',   # Will come from Vault
          'signing_secret': '',  # Will come from Vault
          'app_token': ''  # Will come from Vault
      }
      BOT_PREFIX = '<>'  # Will co your bot's user ID

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wrcbot.fullname" . }}
  labels:
    {{- include "wrcbot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "wrcbot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/role: 'wrcbot-role'
        vault.hashicorp.com/namespace: '{{ .Release.Namespace }}'
        vault.hashicorp.com/auth-path: 'auth/kubernetes'
        vault.hashicorp.com/agent-inject-secret-config.py: 'secret/wrcbot-config'
        vault.hashicorp.com/agent-inject-file-config.py: 'config.py'
        vault.hashicorp.com/agent-inject-template-config.py: |
          # This file is auto-generated by Vault Agent Injector.
          # Do not edit manually.
          # This file is used to configure the Errbot instance.
          BACKEND = 'SlackV3'
          BOT_DATA_DIR = '/errbot/data'
          BOT_EXTRA_PLUGIN_DIR = '/errbot/src/plugins'
          BOT_LOG_FILE = '/errbot/errbot.log'
          BOT_EXTRA_BACKEND_DIR = '/opt/errbot/backend'
          BOT_LOG_LEVEL = 'DEBUG'
          {{ `{{ with secret "secret/wrcbot-config" }}` }}
          BOT_ADMINS = {{ `{{ .Data.BOT_ADMINS }}` }}
          BOT_PREFIX = '{{ `{{ .Data.BOT_PREFIX }}` }}'
          BOT_IDENTITY = {{ `{{ .Data.BOT_IDENTITY }}` }}
          {{- `{{ end }}` }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wrcbot.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: wrcbot-sa
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              cp /vault/secrets/config.py /errbot/src/config.py
              echo "Config copied. Waiting for manual verification..."
              sleep infinity
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            {{- range $key, $value := .Values.bot.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if not .Values.bot.disableHealthChecks }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

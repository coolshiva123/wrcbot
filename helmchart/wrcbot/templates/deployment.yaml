apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wrcbot.fullname" . }}
  labels:
    {{- include "wrcbot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "wrcbot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wrcbot.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: wrcbot-sa
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-volume
          emptyDir: {}
      initContainers:
        - name: vault-init
          image: curlimages/curl:8.7.1
          command:
            - sh
            - -c
            - |
              apk add --no-cache jq
              VAULT_ADDR="http://vault:8200"
              SECRET_PATH="secret/wrcbot-config"
              ROLE="wrcbot-role"
              CONFIG_PATH="/config/config.py"
              JWT=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              VAULT_TOKEN=$(curl -s --request POST \
                --data "{\"role\": \"${ROLE}\", \"jwt\": \"${JWT}\"}" \
                ${VAULT_ADDR}/v1/auth/kubernetes/login | jq -r .auth.client_token)
              SECRET_JSON=$(curl -s --header "X-Vault-Token: ${VAULT_TOKEN}" ${VAULT_ADDR}/v1/${SECRET_PATH})
              CONFIG=$(echo "$SECRET_JSON" | jq -r .data.config)
              cat <<EOF > $CONFIG_PATH
BACKEND='SlackV3'
BOT_DATA_DIR = '/errbot/data'
BOT_EXTRA_PLUGIN_DIR = '/errbot/src/plugins'
BOT_LOG_FILE = '/errbot/errbot.log'
BOT_EXTRA_BACKEND_DIR = '/opt/errbot/backend'
BOT_LOG_LEVEL = 'DEBUG'
BOT_ADMINS = $(echo "$CONFIG" | jq '.BOT_ADMINS')
BOT_IDENTITY = $(echo "$CONFIG" | jq '.BOT_IDENTITY')
BOT_PREFIX = '$(echo "$CONFIG" | jq -r '.BOT_PREFIX')'
EOF
          volumeMounts:
            - name: config-volume
              mountPath: /config
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.bot.overrideCommand }}
          command:
            {{- toYaml .Values.bot.overrideCommand | nindent 12 }}
          {{- end }}
          {{- if .Values.bot.overrideArgs }}
          args:
            {{- toYaml .Values.bot.overrideArgs | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            # Standard environment variables
            {{- range $key, $value := .Values.bot.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /errbot/src/config.py
              subPath: config.py
          {{- if not .Values.bot.disableHealthChecks }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
